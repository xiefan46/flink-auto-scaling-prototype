apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
  labels:
    app: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
        - name: zookeeper
          image: digitalwonderland/zookeeper
          ports:
            - containerPort: 2181
              name: zookeeper-port
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
spec:
  ports:
    - port: 2181
      targetPort: 2181
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-deployment
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
        - name: kafka
          image: wurstmeister/kafka:2.12-2.2.1
          env:
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: kafka-service
            - name: KAFKA_CREATE_TOPICS
              value: "input:1:1, output:1:1, flink-metrics:1:1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper-service:2181
          ports:
            - containerPort: 9092
              name: kafka-port
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  ports:
    - port: 9092
      targetPort: 9092
      protocol: TCP
  selector:
    app: kafka
  type: LoadBalancer
